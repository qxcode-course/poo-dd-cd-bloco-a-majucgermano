{
    "patches": [
        {
            "label": "2025-09-28_22-07-08",
            "content": "@@ -277,19 +277,13 @@\n .age\n- \n %3E=\n- \n 4:%0A\n-    \n     \n@@ -309,23 +309,15 @@\n     \n-    \n return%0A\n-    \n     \n@@ -368,28 +368,24 @@\n =4:%0A        \n-    \n self.age = 4\n@@ -390,28 +390,24 @@\n  4 %0A        \n-   \n- \n print(...)%0A \n@@ -465,28 +465,24 @@\n  4:%0A        \n-    \n return %22RIP%22\n@@ -510,25 +510,24 @@\n =0:%0A        \n- \n return %22*---\n@@ -529,17 +529,16 @@\n %22*---*%22%0A\n- \n         \n",
            "lines": "23"
        },
        {
            "label": "2025-09-28_22-10-26",
            "content": "@@ -452,17 +452,16 @@\n (self)-%3E\n- \n str:%0A   \n@@ -556,16 +556,17 @@\n %22*---*%22%0A\n+ \n         \n",
            "lines": "23"
        },
        {
            "label": "2025-09-28_22-14-29",
            "content": "@@ -1,9 +1,8 @@\n-%0A\n class An\n@@ -203,19 +203,21 @@\n elf.\n-age\n+sound\n %7D:%7Bself.\n soun\n@@ -212,21 +212,19 @@\n %7D:%7Bself.\n-sound\n+age\n %7D%22%0A    d\n@@ -582,10 +582,11 @@\n lf.sound\n- \n+%0A%0A\n %0A\n",
            "lines": "23"
        },
        {
            "label": "2025-09-29_03-07-17",
            "content": "@@ -105,17 +105,16 @@\n lf.sound\n- \n = sound%0A\n@@ -140,26 +140,23 @@\n     def \n-make_sound\n+__str__\n (self) -\n@@ -174,117 +174,44 @@\n     \n-if self.age == 0:%0A            return %22---%22%0A        if self.age == 4:%0A            return %22RIP%22%0A        return \n+return f%22%7Bself.species%7D:%7Bself.age%7D:%7B\n self\n@@ -212,24 +212,26 @@\n :%7Bself.sound\n+%7D%22\n %0A    def age\n@@ -230,18 +230,17 @@\n  def age\n-_b\n+B\n y (self,\n@@ -249,17 +249,16 @@\n crement:\n- \n int):%0A  \n@@ -303,40 +303,11 @@\n int(\n-f%22warning:%7Bself.species%7D morreu%22\n+...\n )%0A  \n@@ -331,24 +331,28 @@\n         \n+    \n self.age\n  += incr\n@@ -347,12 +347,10 @@\n .age\n- \n +=\n- \n incr\n@@ -366,36 +366,34 @@\n      if self.age\n- \n %3E=\n- \n 4:%0A            p\n@@ -395,1370 +395,198 @@\n     \n-print(f%22warning:%7Bself.species%7D morreu%22)%0A            self.age = 4%0A        %0A    def __str__ (self)-%3E str:%0A        return f%22%7Bself.species%7D:%7Bself.age%7D:%7Bself.sound%7D%22%0Adef main ():%0A        animal=Animal(%22%22,%22%22)%0A        while True:%0A            try:%0A                line = input()%0A            except EOFError:%0A                break%0A            print(f%22$%7Bline%7D%22)%0A            par=line.split()%0A            if not par:%0A                continue%0A            cmd=par%5B0%5D%0A            if cmd == %22end%22:%0A                break%0A            elif cmd == %22init%22:%0A                if len(par)%3C3:%0A                    print(%22fail: faltam argumentos%22)%0A                    continue%0A                species=par%5B1%5D%0A                sound=par%5B2%5D%0A                animal=Animal(species,sound)%0A            elif cmd == %22grow%22:%0A                if len(par)%3C2:%0A                    print(%22fail: faltam argumentos%22)%0A                    continue%0A                try:%0A                    increment=int(par%5B1%5D)%0A                    animal.age_by(increment)%0A                except ValueError:%0A                    print(%22fail: o incremento deve ser um inteiro%22)%0A            elif cmd == %22show%22:%0A                print(animal)%0A            elif cmd == %22sound%22:%0A                print(animal.make_sound())%0A            else:%0A                print(%22fail: comando invalido%22)%0Aif __name__ == %22__main__%22:%0A    main()               \n+self.age = 4 %0A            print(...)%0A    def makeSound(self)-%3E str:%0A        if self.age == 4:%0A            return %22RIP%22%0A        if self.age==0:%0A         return %22*---*%22%0A        return self.sound %0A\n",
            "lines": "22"
        },
        {
            "label": "2025-10-04_20-56-17",
            "content": "\nclass Animal:\n    def __init__ (self, species:str, sound:str):\n        self.species= species\n        self.sound = sound\n        self.age=0\n    def make_sound(self) -> str:\n        if self.age == 0:\n            return \"---\"\n        if self.age == 4:\n            return \"RIP\"\n        return self.sound\n    def age_by (self,increment: int):\n        if self.age >= 4:\n            print(f\"warning:{self.species} morreu\")\n            return\n        self.age += increment\n        if self.age >= 4:\n            print(f\"warning:{self.species} morreu\")\n            self.age = 4\n        \n    def __str__ (self)-> str:\n        return f\"{self.species}:{self.age}:{self.sound}\"\ndef main ():\n        animal=Animal(\"\",\"\")\n        while True:\n            try:\n                line = input()\n            except EOFError:\n                break\n            print(f\"${line}\")\n            par=line.split()\n            if not par:\n                continue\n            cmd=par[0]\n            if cmd == \"end\":\n                break\n            elif cmd == \"init\":\n                if len(par)<3:\n                    print(\"fail: faltam argumentos\")\n                    continue\n                species=par[1]\n                sound=par[2]\n                animal=Animal(species,sound)\n            elif cmd == \"grow\":\n                if len(par)<2:\n                    print(\"fail: faltam argumentos\")\n                    continue\n                try:\n                    increment=int(par[1])\n                    animal.age_by(increment)\n                except ValueError:\n                    print(\"fail: o incremento deve ser um inteiro\")\n            elif cmd == \"show\":\n                print(animal)\n            elif cmd == \"sound\":\n                print(animal.make_sound())\n            else:\n                print(\"fail: comando invalido\")\nif __name__ == \"__main__\":\n    main()               ",
            "lines": "61"
        }
    ]
}